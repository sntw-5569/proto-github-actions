name: PR Notification

on:
  schedule:
    - cron: "0 10 * * 1-5"  # 平日の午前10時に実行
  workflow_dispatch:  # 手動実行

jobs:
  notify-unapproved-prs:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get Pull Requests
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          script: |
            const { Octokit } = require("@octokit/rest");
            const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
            const repo = context.repo;
            const labels = ["reviewing"];
            const state = "open";
            const prs = await octokit.pulls.list({
              owner: repo.owner,
              repo: repo.repo,
              state: state,
              labels: labels.join(","),
            });

            const unapprovedPrs = prs.data.filter(pr => pr.requested_reviewers.length < 2);
            const prUrls = unapprovedPrs.map(pr => pr.html_url).join("\n");

            if (unapprovedPrs.length > 0) {
              console.log(`${unapprovedPrs.length}件のプルリクエストについて通知しました`);
            } else {
              console.log("通知対象のプルリクエストはありません");
            }
            const message = `Unapproved Pull Requests:\n${prUrls}`;
            const response = await fetch(process.env.SLACK_WEBHOOK_URL, {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({ text: message }),
            });

            if (!response.ok) {
              throw new Error(`Failed to send message to Slack: ${response.statusText}`);
            }
